<div id="simrooms" class="container-md mt-4">
  <!-- Page Instructions -->
  <div class="alert alert-info mb-4">
    <h4 class="alert-heading fs-5 fw-bold mb-3">How this page works</h4>
    <ol class="mb-2 ps-4">
      <li class="mb-2">
        Create a <strong>Sim Room</strong> to represent a simulation environment
      </li>
      <li class="mb-2">
        Add <strong>Objects</strong> that will be labeled in calibration recordings
      </li>
      <li>
        Add <strong>Calibration Recordings</strong> and label them to train the model
      </li>
    </ol>
    <hr class="my-2">
    <p class="mb-0 fst-italic">
      <i class="bi bi-info-circle-fill me-1"></i> Note: You can also add objects while labeling a calibration recording.
    </p>
  </div>
  <div id="error-message" class="alert alert-danger mb-4"></div>
  <div class="row g-4 user-select-none">
    <!-- Column 1: Manage Sim Rooms -->
    <div class="col-md-4 d-flex flex-column">
      <h2>Sim Rooms</h2>
      <form hx-post="/simrooms/add"
            hx-target="#main-content"
            hx-target-4xx="#error-message"
            hx-target-5xx="#error-message"
            hx-on:click="clearError()"
            autocomplete="off">
        <div class="mb-3">
          <label for="sim-room-name" class="form-label">New Sim Room Name</label>
          <input type="text"
                 class="form-control"
                 id="sim-room-name"
                 name="name"
                 placeholder="Enter sim room name"
                 required>
        </div>
        <button type="submit" class="btn btn-success">Add Sim Room</button>
      </form>
      <ul id="sim-rooms-list" class="list-group">
        {% if sim_rooms|length == 0 %}
          <li class="list-group-item text-muted text-center">No sim rooms created yet</li>
        {% endif %}
        {% for sim_room in sim_rooms %}
          {% set li_classes = "list-group-item d-flex justify-content-between align-items-center transition-bg" %}
          {% if sim_room and sim_room.id == selected_sim_room.id %}
            {% set li_classes = li_classes + " selected" %}
          {% endif %}
          <li class="{{ li_classes }}"
              hx-get="/simrooms?sim_room_id={{ sim_room.id }}"
              hx-target="#main-content">
            {{ sim_room.name }}
            <button class="btn btn-sm btn-danger"
                    hx-confirm="Are you sure? This will delete all calibration recordings and objects linked to this Sim Room."
                    hx-delete="/simrooms/{{ sim_room.id }}"
                    hx-target="#main-content"
                    hx-target-4xx="#error-message"
                    hx-target-5xx="#error-message">
              <i class="bi bi-trash-fill"></i>
            </button>
          </li>
        {% endfor %}
      </ul>
    </div>
    <!-- Column 2: Manage Classes for a Selected Sim Room -->
    <div class="col-md-4 d-flex flex-column">
      <h2>Sim Room Objects</h2>
      {% if selected_sim_room %}
        {% include "components/class-list.jinja" %}
      {% else %}
        <p class="text-muted">Please select a Sim Room from the left to manage its objects.</p>
      {% endif %}
    </div>
    <!-- Column 3: Add Calibration Recordings -->
    <div class="col-md-4 d-flex flex-column">
      <h2>Calibration Recordings</h2>
      {% if selected_sim_room %}
        <form hx-post="/simrooms/{{ selected_sim_room.id }}/calibration_recordings"
              hx-target="#main-content"
              hx-target-4xx="#error-message"
              hx-target-5xx="#error-message"
              hx-on:click="clearError()"
              autocomplete="off">
          <div class="mb-3">
            <label for="recording-select" class="form-label">Select Recording</label>
            <select class="form-select"
                    name="recording_uuid"
                    id="recording-select"
                    required>
              <option value="">Select a recording...</option>
              {% for recording in recordings %}
                <option value="{{ recording.uuid }}">{{ recording.participant }} - {{ recording.formatted_created }}</option>
              {% endfor %}
            </select>
          </div>
          <button type="submit" class="btn btn-success">Add Calibration Recording</button>
        </form>
      {% endif %}
      <ul id="calibration-recordings-list" class="list-group">
        {% if not selected_sim_room %}
          <li class="list-group-item text-muted text-center">
            Please select a Sim Room from the left to manage its Calibration Recordings
          </li>
        {% elif calibration_recordings|length == 0 %}
          <li class="list-group-item text-muted text-center">No calibration recordings added yet</li>
        {% endif %}
        {% for cal_rec in calibration_recordings %}
          <li class="list-group-item transition-bg">
            <div class="d-flex justify-content-between align-items-center">
              <div class="d-flex flex-column">
                <div class="fw-bold">{{ cal_rec.recording.participant }}</div>
                <div class="text-muted small">{{ cal_rec.recording.formatted_created }}</div>
              </div>
              <div class="d-flex gap-2">
                <button class="btn btn-sm btn-primary d-flex align-items-center gap-2"
                        hx-post="/labeling?calibration_id={{ cal_rec.id }}"
                        hx-target="#main-content"
                        hx-target-4xx="#error-message"
                        hx-target-5xx="#error-message"
                        hx-push-url="true"
                        hx-disabled-elt="this"
                        hx-indicator="find .spinner, find .bi"
                        hx-on:click="clearError()">
                  <i class="bi bi-pencil-square htmx-request-hide"></i>
                  <div class="spinner spinner-border spinner-border-sm" role="status"></div>
                  Start Labeling
                </button>
                <button class="btn btn-sm btn-danger d-flex align-items-center"
                        hx-confirm="Are you sure you want to delete this calibration recording? All calibration annotations will be lost."
                        hx-delete="/simrooms/{{ selected_sim_room.id }}/calibration_recordings/{{ cal_rec.id }}"
                        hx-target="#main-content"
                        hx-target-4xx="#error-message"
                        hx-target-5xx="#error-message"
                        hx-on:click="clearError()">
                  <i class="bi bi-trash-fill"></i>
                </button>
              </div>
            </div>
          </li>
        {% endfor %}
      </ul>
    </div>
  </div>
</div>
<!-- Added style for selected list item -->
<style>
  .selected {
    background-color: rgba(0,0,0,.075);
  }
  .transition-bg {
    transition: background-color 0.2s ease-in-out;
  }
  .transition-bg:hover {
    background-color: rgba(0,0,0,.055);
  }
  .list-group:empty {
    display: none;
  }
  .list-group-item {
    transition: border-left-color 0.2s ease-in-out;
  }
  .list-group-item:hover {
    border-left: 3px solid var(--bs-primary);
  }
  .list-group-item.selected {
    border-left: 3px solid var(--bs-primary);
  }
  form + .list-group {
    margin-top: 1.5rem;
  }
</style>
<script>
  // Add click event delegation for sim room list items
  document.getElementById('sim-rooms-list').addEventListener('click', function(e) {
    updateSimRoomSelection(e.target.closest('li'));
  });

  // Function to update sim room selection state
  function updateSimRoomSelection(selectedLi) {
    if (!selectedLi) return;
    const list = document.getElementById('sim-rooms-list');
    [...list.querySelectorAll('li')].forEach(item => item.classList.remove('selected'));
    selectedLi.classList.add('selected');
  }

  // Run on initial load to ensure proper selection state
  document.addEventListener('htmx:afterSettle', function() {
    const list = document.getElementById('sim-rooms-list');
    if (!list) return;

    // First try to find already selected item
    let selectedLi = list.querySelector('li.selected');
    
    // If no item is selected but we have a sim room ID in the URL, select that one
    if (!selectedLi) {
      const urlParams = new URLSearchParams(window.location.search);
      const simRoomId = urlParams.get('sim_room_id');
      if (simRoomId) {
        selectedLi = list.querySelector(`li[hx-get*="sim_room_id=${simRoomId}"]`);
      }
    }

    if (selectedLi) {
      updateSimRoomSelection(selectedLi);
    }
  });

  // Update URL when sim room is selected
  document.body.addEventListener('htmx:afterSettle', function(evt) {
    if (evt.detail.target.id === 'simrooms') {
      const selectedLi = document.querySelector('#sim-rooms-list li.selected');
      if (selectedLi) {
        const href = selectedLi.getAttribute('hx-get');
        const url = new URL(href, window.location.origin);
        const simRoomId = url.searchParams.get('sim_room_id');
        if (simRoomId) {
          const newUrl = new URL(window.location.href);
          newUrl.searchParams.set('sim_room_id', simRoomId);
          window.history.replaceState({}, '', newUrl);
        }
      }
    }
  });
</script>
