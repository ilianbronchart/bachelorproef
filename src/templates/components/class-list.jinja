<div id="class-list"
     class="class-management d-flex flex-column"
     {% if sim_room.id %}data-sim-room-id="{{ sim_room.id }}"{% endif %}>
  <form hx-post="/simrooms/{{ sim_room.id }}/classes/add"
        hx-target="#class-list"
        hx-target-4xx="#error-message"
        hx-target-5xx="#error-message"
        hx-on:click="clearError()"
        autocomplete="off">
    <div class="mb-3">
      <label for="class-name" class="form-label user-select-none">New Object Name:</label>
      <input type="text"
             class="form-control"
             id="class-name"
             name="class_name"
             placeholder="Enter object name"
             required>
    </div>
    <button type="submit" class="btn btn-success">Add Object</button>
  </form>
  <ul class="list-group class-list user-select-none">
    {% if classes|length == 0 %}<li class="list-group-item text-muted text-center">No objects defined</li>{% endif %}
    {% for class in classes %}
      <li class="list-group-item d-flex justify-content-between align-items-center transition-bg {% if class.active %}active{% endif %}"
          onclick="window.classManager.setActiveClass(this, '{{ class.id }}')"
          data-class-id="{{ class.id }}">
        <div class="d-flex align-items-center gap-2">
          <div class="color-preview" style="background-color: {{ class.color }}"></div>
          <span class="class-name">{{ class.class_name }}</span>
        </div>
        <button class="btn btn-sm btn-danger"
                hx-confirm="Are you sure? This will delete all annotations linked to this class."
                hx-delete="/simrooms/{{ sim_room.id }}/classes/{{ class.id }}"
                hx-target="#class-list"
                hx-target-400="#error-message"
                hx-target-404="#error-message"
                hx-target-500="#error-message"
                hx-on:click="clearError()">
          <i class="bi bi-trash"></i>
        </button>
      </li>
    {% endfor %}
  </ul>
</div>
<script>
// Global class manager to handle class state
window.classManager = {
    classes: [],
    activeClass: null,

    // Initialize with a list of classes
    initialize(classes, onClick) {
        this.classes = classes;
        this.activeClass = null;
        this.onClick = onClick
    },

    // Set the active class when a class is selected
    setActiveClass(element, class_id) {
        // Remove active class from all elements
        document.querySelectorAll('.class-list .list-group-item').forEach(item => {
            item.classList.remove('active');
        });

        // Add active class to selected element
        if (element) {
            element.classList.add('active');
        }

        this.activeClass = this.classes.find(
          c => parseInt(c.id) === parseInt(class_id)
        ) || null;

        this.onClick();
    },

    // Update a class's properties
    updateClass(id, updatedClass) {
        const index = this.classes.findIndex(c => c.id === id);
        if (index !== -1) {
            this.classes[index] = updatedClass;
            if (this.activeClass && this.activeClass.id === id) {
                this.activeClass = updatedClass;
            }
        }
    },

};
</script>
<style>
  .list-group {
    margin-top: 1.5rem;
  }
  .class-list .list-group-item {
    cursor: pointer;
    border-left: 3px solid transparent;
    transition: all 0.2s ease-in-out;
    background-color: transparent;
  }
  .class-list .list-group-item:hover {
    background-color: rgba(0,0,0,.055);
    border-left-color: var(--bs-primary);
  }
  .class-list .list-group-item.active {
    color: inherit;
    background-color: rgba(0,0,0,.075);
    border-color: rgba(0,0,0,.125);
    border-left-color: var(--bs-primary);
    transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
  }
  .class-list .list-group-item.active:hover {
    background-color: rgba(0,0,0,.1);
    border-left-color: var(--bs-primary);
  }
  .class-list .list-group-item .class-name {
    flex-grow: 1;
  }
  .color-preview {
    width: 24px;
    height: 24px;
    border-radius: 4px;
    border: 1px solid rgba(0,0,0,.2);
  }
  /* Make list take full height */
  .class-management {
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  .class-list {
    flex-grow: 1;
    overflow-y: auto;
  }
</style>
