<div id="labeling-controls"
     class="d-flex align-items-center gap-3 mb-3 h-auto"
     hx-on::after-settle="setTimelinePosition(event)"
     hx-get="/labeling/tracking/status"
     hx-trigger="every 1s"
     hx-swap="outerHTML">
  <button id="btn-track" class="btn btn-primary btn-square">
    <svg xmlns="http://www.w3.org/2000/svg"
         height="24px"
         viewBox="0 -960 960 960"
         width="24px"
         fill="#e3e3e3">
      <path d="M440-40v-80q-125-14-214.5-103.5T122-438H42v-80h80q14-125 103.5-214.5T440-836v-80h80v80q125 14 214.5 103.5T838-518h80v80h-80q-14 125-103.5 214.5T520-120v80h-80Zm40-158q116 0 198-82t82-198q0-116-82-198t-198-82q-116 0-198 82t-82 198q0 116 82 198t198 82Z" />
    </svg>
  </button>
  <div id="timeline"
       class="position-relative w-100 rounded"
       hx-get="/labeling/controls"
       hx-target="#labeling-controls"
       hx-swap="outerHTML"
       hx-trigger="labeling-seek-frame-index from:window, click"
       hx-on::config-request="configSeekRequest(event)">
    <div id="timeline-position" class="rounded"></div>
  </div>
  <script>
frameCount = parseInt({{ frame_count }});
currentFrameIdx = parseInt({{ current_frame_idx }});

function configSeekRequest(event) {
  const triggeringEvent = event.detail.triggeringEvent;
  if (triggeringEvent.detail.frameIndex !== undefined) {
    event.detail.parameters.frame_idx = triggeringEvent.detail.frameIndex;
  } else {
    const timeline = document.getElementById("timeline");
    const rect = timeline.getBoundingClientRect();
    const clickX = triggeringEvent.clientX - rect.left;
    const percent = clickX / timeline.offsetWidth;
    event.detail.parameters.frame_idx = parseInt(percent * frameCount);
  }
}

function setTimelinePosition(event) {
  if (!event.detail.requestConfig.path.includes('tracking')) {
    // canvas shouldn't be updated if the call is for tracking status
    window.dispatchEvent(new CustomEvent('labeling-seek'));
  }
  const position = document.getElementById("timeline-position");
  position.style.left = `${currentFrameIdx / frameCount * 100}%`;
  position.style.transform = 'translateX(-50%)';
}
  </script>
  <style>
#btn-track {
  width: 40px;
  height: 40px;
}

#timeline {
  height: 30px;
  background-color: rgb(231, 231, 231);
  cursor: pointer;
}

#timeline-position {
  position: absolute;
  top: -3px;
  left: 0;
  width: 0;
  height: 36px;
  width: 8px;
  background-color: white;
  z-index: 10;
  -webkit-box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5);
  -moz-box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5);
  box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5);
  outline: 3px solid #0d6efd; 
}

.track {
  position: absolute;
  top: -3px;
  left: 300px;
  height: 36px;
  width: 200px; 
  -webkit-box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5);
  -moz-box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5);
  box-shadow: 0px 0px 3px 0px rgba(0,0,0,0.5);
}
  </style>
</div>
