[tool.poetry]
name = "bachelorproef"
version = "0.1.0"
description = ""
authors = ["Ilian Bronchart"]
readme = "README.md"
packages = [
    { include = "src" },
    { include = "dinov2", from="libs/dinov2" }
]


[[tool.poetry.source]]
name = "torch-cu121"
url = "https://download.pytorch.org/whl/cu121"
priority = "explicit"

[tool.poetry.dependencies]
python = "^3.10"
tqdm = "^4.67.1"
transformers = "4.48.0"  # Remove ^ for exact version
pytest = "8.3.4"
mypy = "1.14.1"
ruff = "0.9.2"
pytest-asyncio = "0.25.2"
fastapi = {extras = ["standard"], version = "0.115.6"}
djlint = "1.36.4"
matplotlib = "3.10.0"
ipykernel = "6.29.5"
torch = {version = "2.2.0", source = "torch-cu121"}
torchvision = {version = "0.17.0", source = "torch-cu121"}
torchaudio = {version = "2.2.0", source = "torch-cu121"}
g3pylib = { path = "libs/g3pylib"}
ipywidgets = "8.1.5"
ultralytics = "8.3.67"
wheel = "0.45.1"
opencv-python = "4.11.0.86"
onnx = "1.17.0"
onnxslim = "0.1.48"
onnxruntime-gpu = "1.20.1"
tensorflow = "^2.18.0"
numpy = "<2.0.0"
faiss-gpu = "^1.7.2"
sqlalchemy = "^2.0.37"
alembic = "^1.14.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
files = ["src", "tests"]
mypy_path = "src"
python_version = "3.10"
pretty = true
strict = true
disallow_subclassing_any = false
exclude = ["libs/"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",  # Because code out of our control can be deprecated
    "ignore:Implicitly cleaning up:ResourceWarning",  # Because resources are implicitly cleaned up
]
markers = [
    "requires_gpu",
]

[tool.ruff]
target-version = "py310"
line-length = 120  # Was 79
exclude = [
    "libs/" # External libraries
]
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-pytest-style
    "PT",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # NumPy-specific rules
    "NPY",
]
lint.ignore = [
    "E731", # DoNotAssignLambda
    "TRY003",  # Because it is tedious
    "ISC001", # May cause conflicts
]
# Allow imports relative to the "src" and "test" directories.
src = ["src", "tests"]

[tool.ruff.format]
preview = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101",  # assert
    "I001",  # unsorted-imports.
]